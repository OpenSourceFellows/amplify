const path = require('path')
const express = require('express')
const history = require('connect-history-api-fallback')
const apiRouter = require('./api')
const passport = require('passport')
const session = require('express-session')
const PostgreSQLStore = require('connect-pg-simple')(session)

const app = express()

// Enable if you're behind a reverse proxy (Heroku, Bluemix, AWS ELB or API Gateway, Nginx, etc)
// see https://expressjs.com/en/guide/behind-proxies.html
app.set('trust proxy', true)

// Load the API router
app.use('/api', apiRouter)

// Fix for hash URLs in Vue
// IMPORTANT: MUST be added before the `express.static` middleware for the `dist/` directory
app.use(history())

// pg is the PostgreSQL client library. Pool class creates a connection pool. pgPool is pool instance use for queries
const { Pool } = require('pg')
const pgPool = new Pool()

// Set up session
app.use(
  session({
    store: new PostgreSQLStore({
      pool: pgPool,
      tableName: 'sessions'
    }),
    secret: 'keyboard cat',
    resave: false,
    saveUninitialized: false
  })
)

// Passport middleware
app.use(passport.initialize())
app.use(passport.session())

// Routes generated by Vue CLI
const staticPath = path.resolve(__dirname, '../dist')
app.use(express.static(staticPath, { maxAge: '1d', etag: false }))

module.exports = app
